name: User API CD Pipeline For Develop

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['User API CI Pipeline For Develop']
    types:
      - completed

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
  SERVICE_NAME: user-api

jobs:
  deploy:
    runs-on: [self-hosted, develop, user-api]
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.merged == true }}
    steps:
      - name: Create .env.develop file
        env:
          ENV_DEVELOP_BASE64: ${{ secrets.ENV_DEVELOP_BASE64 }}
        run: |
          echo "$ENV_DEVELOP_BASE64" | base64 -d > .env.develop

      - name: Read Port from .env.develop
        run: |
          echo "PORT=$(grep -w 'USER_API_PORT' .env.develop | cut -d '=' -f2)" >> $GITHUB_ENV

      - name: Pull Docker image
        run: sudo docker pull $DOCKER_USERNAME/$DOCKER_REPOSITORY:$SERVICE_NAME-latest

      - name: Delete Old docker container
        run: sudo docker rm -f $SERVICE_NAME || true

      - name: Run Docker Container
        run: |
          sudo docker run -d -p ${PORT}:${PORT} --env-file .env.develop \
          --network be-network \
          --restart always \
          --name $SERVICE_NAME $DOCKER_USERNAME/$DOCKER_REPOSITORY:$SERVICE_NAME-latest

      - name: Remove dangling images
        run: sudo docker image prune -f
